@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  html {
    height: -webkit-fill-available;
  }

  body {
    @apply bg-gotham-dark text-gray-100 font-sans min-h-screen;
    min-height: -webkit-fill-available;
    position: fixed;
    width: 100%;
    height: 100%;
    overflow: hidden;
  }

  /* Fix iOS 100vh issue */
  @supports (-webkit-touch-callout: none) {
    .h-screen {
      height: -webkit-fill-available;
    }
  }

  /* Dynamic viewport height CSS variables */
  :root {
    --vh: 1vh;
  }
}

@layer components {
  .btn {
    @apply px-2 py-1 md:px-4 md:py-2 rounded-md font-medium transition-colors;
  }

  .btn-primary {
    @apply bg-bat-yellow text-black hover:bg-opacity-80;
  }

  .btn-outline {
    @apply border border-gray-500 hover:bg-gray-800;
  }

  .input {
    @apply bg-gotham-blue border border-gray-700 rounded-md px-3 py-2 w-full focus:outline-none focus:ring-1 focus:ring-bat-yellow text-sm md:text-base;
  }
}

/* Utility classes for dynamic viewport height */
.h-mobile-screen {
  height: calc(var(--vh, 1vh) * 100);
}

.h-mobile-screen-minus-header {
  height: calc(var(--vh, 1vh) * 100 - 64px);
}

.h-mobile-partial {
  height: calc(var(--vh, 1vh) * 45);
}

.max-h-mobile-screen-minus-header {
  max-height: calc(var(--vh, 1vh) * 100 - 64px);
}

.h-mobile-content {
  height: calc(var(--vh, 1vh) * 55 - 64px);
}

/* Mobile keyboard fix - adjust behavior when input is focused */
@media (max-width: 768px) {
  /* Move the input to the top of the viewport when it has focus */
  input:focus {
    position: relative;
    z-index: 100;
  }

  /* Prevent content from being hidden beneath keyboard */
  .js-focus-visible input:focus,
  input:focus {
    padding-bottom: 1rem;
  }

  /* Make sure we can always see what we're typing by allowing window scroll when input is focused */
  input:focus ~ * {
    position: static !important;
  }

  body:has(input:focus) {
    position: static !important;
    overflow: auto !important;
    height: auto !important;
  }
}
